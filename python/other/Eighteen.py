# $Id: Eighteen.py 45 2013-10-06 15:57:20Z korsnack $
#!/bin/python

from Twentyfour import *

# Qualification Probabilities
"""
P(#s Qualified, # of Dice Rolled --> #s Qualified, # of Dice Rolled)

P(0,0 --> 0,1) = 4^5/6^5 = 1024/7776
P(0,0 --> 1,1) = 2*(5^5-4^5)/6^5 = 4202/7776
P(0,0 --> 2  ) = 1-P(0,0 --> 0,1) - P(0,0 --> 1,1) = 2550/7776
P(0,1 --> 0,2) = 4^4/6^4 = 256/1296
P(0,1 --> 1,2) = 2*(5^4-4^4)/6^4 = 738/1296
P(0,1 --> 2  ) = 1-P(0,1 --> 0,2) - P(0,1 --> 1,2) = 302/1296
P(0,2 --> 0,3) = 4^3/6^3 = 64/216
P(0,2 --> 1,3) = 2*(5^3-4^3) = 122/216
P(0,2 --> 2  ) = 1-P(0,2 --> 0,3) - P(0,2 --> 1,3) = 30/216
P(0,3 --> 0,4) = 4^2/6^2 = 16/36
P(0,3 --> 1,4) = 2*(5^2-4^2)/6^2 = 18/36
P(0,3 --> 2  ) = 1-P(0,3 --> 0,4) - P(0,3 --> 1,4) = 2/6
P(0,4 --> 0,5) = 4/6
P(0,4 --> 1,5) = 1-P(0,4 --> 1,5)
P(1,1 --> 1,2) = 5^4/6^4 = 625/1296
P(1,1 --> 2  ) = 1-P(1,2 --> 2)
P(1,2 --> 1,3) = 5^3/6^3 = 125/216
P(1,2 --> 2  ) = 1-P(1,2 --> 1,3) = 91/216
P(1,3 --> 1,4) = 5^2/6^2 = 25/36
P(1,3 --> 2  ) = 1-P(1,3 --> 1,4) = 11/36
P(1,4 --> 1,5) = 5/6
P(1,4 --> 2  ) = 1/6

import numpy as np
np.set_printoptions(precision = 5)

TM = np.matrix([
[0., 1024./7776, 0., 0., 0., 0., 4202./7776, 0., 0., 0., 0., 2550./7776],
[0., 0., 256./1296, 0., 0., 0., 0., 738./1296, 0., 0., 0., 302./1296],
[0., 0., 0., 64./216, 0., 0., 0., 0., 122./216, 0., 0., 30./216],
[0., 0., 0., 0., 16./36, 0., 0., 0., 0., 18./36, 0., 2./36],
[0., 0., 0., 0., 0., 4./6, 0., 0., 0., 0., 2./6, 0.],
[0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0.],
[0., 0., 0., 0., 0., 0., 0., 625./1296, 0., 0., 0., 671./1296],
[0., 0., 0., 0., 0., 0., 0., 0., 125./216, 0., 0., 91./216],
[0., 0., 0., 0., 0., 0., 0., 0., 0., 25./36, 0., 11./36],
[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 5./6, 1./6],
[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.]
])

TM**1
     0,0     0,1     0,2     0,3     0,4     0,5     1,1     1,2     1,3     1,4     1,5     2
0,0 [0.      0.13169 0.      0.      0.      0.      0.54038 0.      0.      0.      0.      0.32793]
0,1 [0.      0.      0.19753 0.      0.      0.      0.      0.56944 0.      0.      0.      0.23302]
0,2 [0.      0.      0.      0.29630 0.      0.      0.      0.      0.56481 0.      0.      0.13889]
0,3 [0.      0.      0.      0.      0.44444 0.      0.      0.      0.      0.5     0.      0.05556]
0,4 [0.      0.      0.      0.      0.      0.66667 0.      0.      0.      0.      0.33333 0.     ]
0,5 [0.      0.      0.      0.      0.      1.      0.      0.      0.      0.      0.      0.     ]
1,1 [0.      0.      0.      0.      0.      0.      0.      0.48225 0.      0.      0.      0.51775]
1,2 [0.      0.      0.      0.      0.      0.      0.      0.      0.57870 0.      0.      0.42130]
1,3 [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.69444 0.      0.30556]
1,4 [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      0.83333 0.16667]
1,5 [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      1.      0.     ]
2   [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      1.     ]

TM**5
     0,0     0,1     0,2     0,3     0,4     0,5     1,1     1,2     1,3     1,4     1,5     2
0,0 [0.      0.      0.      0.      0.      0.00228 0.      0.      0.      0.      0.12524 0.87247]
0,1 [0.      0.      0.      0.      0.      0.01734 0.      0.      0.      0.      0.28833 0.69433]
0,2 [0.      0.      0.      0.      0.      0.08779 0.      0.      0.      0.      0.49421 0.418  ]
0,3 [0.      0.      0.      0.      0.      0.2963  0.      0.      0.      0.      0.56481 0.13889]
0,4 [0.      0.      0.      0.      0.      0.66667 0.      0.      0.      0.      0.33333 0.     ]
0,5 [0.      0.      0.      0.      0.      1.      0.      0.      0.      0.      0.      0.     ]
1,1 [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      0.16151 0.83849]
1,2 [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      0.3349  0.6651 ]
1,3 [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      0.5787  0.4213 ]
1,4 [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      0.83333 0.16667]
1,5 [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      1.      0.     ]
2   [0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      0.      1.     ]
"""
# Game Expectations
"""
d = [1,2,3,4,5,6]
dd = [sorted([i,j], reverse=True) for i in d for j in d]
ddd = [sorted([i,j,k], reverse=True) for i in d for j in d for k in d]
<d> = sum(d)/float(len(d)) = 21/6. = 3.5
<dd> = sum([i+max(j, 3.5) for (i,j) in dd])/len(dd) = 296.5/36 = 8.23611
<ddd> = sum(i+max(j+k, j+3.5, 8.2) for (i,j,k) in ddd])/len(ddd) = 2899.77778/216 = 13.42490
<G> = ?
"""

class Eighteen(Twentyfour):
    def __init__(self, RS = RuleSet()):
        Twentyfour.__init__(self)
        self.RS = RS
        self.maxscore = 18
        self.TF = Twentyfour(self.RS)

    def play(self, h = None):
        return self.TF.play(dice = [9,9,9,9,9], h=h)
